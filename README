# dropip
Deny the source of brute force attacks.

version 2.x
copyright 2023. EXTRICK LLC.

■ What's dropip?
Webサーバーのアクセスログをスキャンして、不審なアクセス元のIPを探し出し、.htaccessに登録して今後のアクセスを拒否するツールです。
ブルートフォースアタックを有効にブロックします。

This is a tool that scans web server access logs, finds suspicious access source IPs, and registers them in .htaccess to deny future access.
Effectively blocks brute force attacks.


■ Composition
dropip.py       本体スクリプト
denywords       拒否する単語を登録しておきます。Register words to be rejected.
allowip         許可するIPを登録しておきます。Register the IPs you want to allow.
allowwords      許可する単語を登録しておきます。Register the words you want to allow.


■ Options
dropip.py -h または dropip.py --help で表示されます。
-s --server     apache または nginx を指定します。（apache）
-l --accesslog  スキャンするログファイルを指定します。（/var/log/httpd/access_log）
-o --outfile    出力するファイルを指定します。（./deny.conf）
-t --threshold  エラー（4xx、5xx）をカウントして拒否する閾値を指定します。（10）


■ Install & Usage
cron で定期的に実行することを想定しています。
適当な場所にファイル一式をコピーします。
  例：
  /usr/local/bin/dropip/
    +-- dropip.py
    +-- allowip
    +-- allowwords
    +-- denywords

allowip
  ここに記載されたIPは無条件にアクセスを許可します。
  サーバー管理者のIPなどを登録しておきます。
  IPs listed here will be allowed access unconditionally.
  Register the server administrator's IP etc.

allowwords
  ここに記載された文字列を含むアクセスは無条件に許可されます。
  正規表現で記述します。（後述）
  Access containing the strings listed here is permitted unconditionally.
  Describe it using regular expressions. (described later)

denywords
  ここに記載された文字列を含むアクセスのアクセス元IPは拒否リストに登録されます。
  以降、拒否リストに登録されたIPからは、すべてのアクセスを拒否します。
  正規表現で記述します。（後述）
  The access source IP that contains the character strings listed here will be registered in the denial list.
  From then on, all access from IPs registered in the denial list will be denied.
  Describe it using regular expressions. (described later)

Files generated after execution
  dropip.db   拒否IPを格納しているSQLite3データベース
  deny.conf   .htaccess（for apache）、nginx confファイル（for nginx）
  exec.log    今回の実行で拒否したIPと、日別のエラーカウントのリスト
  pass.log    今回の実行で拒否されなかったアクセスログ


■ Execution
実際に運用する際は、次のようなバッチファイルを cron に登録すると管理が楽になります。

apache の場合
  dropip.sh を作成します。

  #!/bin/bash
  cd /usr/local/bin/dropip
  /bin/python3 ./dropip.py -s apache -l /var/log/httpd/access_log
  cat ./exec.log
  cp ./deny.conf /var/www/SITE_NAME/html/.htaccess

  crontab に dropip.sh を登録します。
  51 * * * * /usr/bin/python3 /usr/local/bin/dropip/dropip.sh

nginx の場合
  dropip.sh を作成します。
  拒否リストを出力後、nginx をリロードする必要があります。

  #!/bin/bash
  cd /usr/local/bin/dropip
  /bin/python3 ./dropip.py -s nginx -l /var/log/httpd/access_log
  cat ./exec.log
  systemctl reload nginx

  crontab に dropip.sh を登録します。
  51 * * * * /usr/bin/python3 /usr/local/bin/dropip/dropip.sh

  出力ファイル（deny.conf）を nginx の設定ファイルとして読み込むように設定しておきます。
  例： ln -s /usr/local/bin/dropip/deny.conf /etc/nginx/conf.d/deny.conf

いずれも、exec.log を標準出力に出力して、メールで結果が届くようにしています。
pass.log を開いて、怪しいアクセスを探してください。
あるはずのないディレクトリやファイルへのアクセスはブルートフォースアタックの可能性があります。キーワードとして正規表現（後述）で  denywords に追加しておきましょう。


■ How to
apache で wordpress が生成した .htaccess がある、予めダウンロードした海外のIPリスト（foreign_ip.conf）があるなどの場合は、それらを別ファイルで保存しておき、バッチファイルの中で cat コマンドを使って、dropip.py の出力ファイル（deny.conf）に設定済みのファイルを結合してください。
例： cat htaccess.template deny.conf foreign_ip.conf > .htaccess
（オプション -i は廃止しました。）


■ 正規表現
allowwords、denywords に記述する正規表現は、'/' 以外のメタ文字を '\' でエスケープした文字列です。
例："GET /class.api.php を拒否する場合
  denywords には、"GET /class\.api\.php を登録します。


■ 更新履歴
bugfix 2023.09.16
  エラーカウントが閾値を超えても拒否リストに登録されないバグを修正しました。
version 2.0 2023.09.13
  php（cli）で開発していたソースを python3 で書き換えて公開しました。
